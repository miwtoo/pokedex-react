{"version":3,"sources":["component/Card.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Card","props","className","text","App","useState","pokemons","setPokemon","useEffect","axios","get","then","res","data","results","map","pokemon","href","url","name","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAAe,SAASA,EAAKC,GAC3B,OACE,qBAAKC,UAAU,8DAAf,SACGD,EAAME,OCmCEC,MAjCf,WAAgB,IAAD,IACkBC,mBAAS,IAD3B,mBACNC,EADM,KACIC,EADJ,KAQb,OANAC,qBAAU,WACRC,IAAMC,IAAI,+CAA+CC,MAAK,SAACC,GAC7DL,EAAWK,EAAIC,WAEhB,IAGD,qCACGP,QADH,IACGA,GADH,UACGA,EAAUQ,eADb,aACG,EAAmBC,KAAI,SAACC,GACvB,OACE,mBAAGC,KAAMD,EAAQE,IAAKhB,UAAU,OAAhC,SACE,cAACF,EAAD,CAAMG,KAAMa,EAAQG,eCJjBC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c21a8bc7.chunk.js","sourcesContent":["export default function Card(props: { text: string }) {\n  return (\n    <div className=\"py-8 px-8 my-4 shadow-xl bg-white bg-opacity-50 rounded-2xl\">\n      {props.text}\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Card from \"./component/Card\";\n\nfunction App() {\n  const [pokemons, setPokemon] = useState({} as Pokemons);\n  useEffect(() => {\n    axios.get(\" https://pokeapi.co/api/v2/pokemon?limit=10\").then((res) => {\n      setPokemon(res.data as Pokemons);\n    });\n  }, []);\n\n  return (\n    <div>\n      {pokemons?.results?.map((pokemon) => {\n        return (\n          <a href={pokemon.url} className=\"my-6\">\n            <Card text={pokemon.name}></Card>\n          </a>\n        );\n      })}\n    </div>\n  );\n}\n\nexport interface Result {\n  name: string;\n  url: string;\n}\n\nexport interface Pokemons {\n  count: number;\n  next: string;\n  previous?: any;\n  results: Result[];\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}